###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2020. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: ibmfncm
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 20.0.3
spec:
  ##########################################################################
  ## This section contains the shared configuration for all CP4A components #
  ##########################################################################
  appVersion: 20.0.3
  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: accept
  #####################################################################################################################
  ##  This template CR file reflects the ICP4A plaftorm foundation components shared by most of othe ICP4A capabilities,
  ##  as well as shared configurations for settings and services applicable to the ICP4A installation environment such
  ##  as LDAP, data sources, images information, storage classes, and other parameters you can find in the
  ##  shared_configuration section below.
  ##
  ##  The label, or "pattern name", for these foundation components is "foundation". You see this label set in the
  ##  sc_deployment_patterns parameter in the shared_configuration section of this file.
  ##
  ##  The ICP4A operator will automatically install the required foundation components, based on the description below, when
  ##  it detects the "foundation" pattern name amongst the sc_deployment_patters CR parameter of the CR being applied.
  ##
  ##  The foundation components that are automatically installed, by default, by the ICP4A operator are:
  ##    - Business Automation Navigator (BAN)
  ##    - Resource Registry (RR)
  ##
  ##  These other foundation components are installed based on their need, but their related minimal configuration
  ##  is included in this CR template.  Those additional platform components are:
  ##
  ##    - Business Automation Studio (BAS)
  ##    - User Management Services (UMS)
  ##    - Business Automation Insights (BAI)
  ##
  ##  Note that from the above foundation components, only BAI (with label "bai") will need to be explicitly specified
  ##  in the sc_optional_components parameter (in the shared_configuration) to inform the operator to install it, as
  ##  this installation of BAI reflects a user choice since BAI is not a pre-requisite component for any ICP4A capability.
  ##
  ##  This template CR contains the minimal configuration required for foundation components, since the ICP4A operator
  ##  will take care of defaults for a typicall configuration.
  ##
  ##  For BAN, RR, UMS and BAI you will not find dedicated configuration sections in this template since
  ##  default configurations are being used by the operator.
  ##
  ##  For BAB, UMS and BAI, you will only find  configuration parameters in the share_configuration section that need
  ##  to be configured.
  ##
  ##  For BAS, you will find a minimal bastudio_configuration section is in the CR, which will need to be present
  ##  and configured by you should if you are planning to install any of the following ICP4A capabilities and features:
  ##     - Automation Content Analyzer (contentanlyzer)
  ##     - Automation Digital Worker (digitalworker)
  ##     - the Applications Designer (app_designer) feature with  Business Automation Application (application)
  ##     - the Decision Designer feature (ads_designer) with Automation Decision Services (decisions_ads)
  ##
  ##  Note: In case non of these is to be installed, the bastudio_configuration should be commented out or deleted
  ##  from the final CR that will be applied.
  ##
  ##  How to use this template:
  ##
  ##  Make a copy of this CR foundation template as your starting point ICP4A CR yaml you are manually assembling.
  ##  Then paste into that CR the information and configuration from the respective
  ##  ibm_cp4a_cr_enterprise_<capability patter name>.yaml CR template files available in the same location.
  ##
  ######################################################################################################################
  shared_configuration:
    ## FileNet Content Manager (FNCM) license and possible values are: user, non-production, and production.
    ## This value could be different from the rest of the licenses.
    sc_deployment_fncm_license: "production"
    ## Business Automation Workflow (BAW) license and possible values are: user, non-production, and production.
    ## This value could be different from the other licenses in the CR.
    sc_deployment_baw_license: "<Required>"
    ## Use this parameter to specify the license for the CP4A deployment and
    ## the possible values are: non-production and production and if not set, the license will
    ## be defaulted to production.  This value could be different from the other licenses in the CR.
    sc_deployment_license: "<Required>"
    ## All CP4A components must use/share the same docker image repository.  For example, if IBM Entitled Registry is used, then
    ## it should be "cp.icr.io".  Otherwise, it will be a local docker registry.
    sc_image_repository: cp.icr.io
    ## All CP4A components must use/share the root_ca_secret in order for integration.
    root_ca_secret: icp4a-root-ca
    ## CP4A patterns or capabilities to be deployed.  This CR represents the "content" pattern (aka FileNet Content Manager), which includes the following
    ## mandatory components: cpe, icn (BAN/Navigator), graphql
    sc_deployment_patterns: "foundation,content"
    ## The optional components to be installed if listed here.  This is normally populated by the User script based on input from the user.
    ## The optional components are: Content Manager Image Services (cmis), css (Content Search Services), es (External Share), tm (Task Manager),
    ##                              IBM Enterprise Records (ier) and IBM Content Collector for SAP (iccsap)
    ## NOTE: tm, ier, and iccsap does NOT support integration with ums.
    sc_optional_components: ""
    ## The deployment type as selected by the user.  Possible values are: demo, enterprise.
    sc_deployment_type: "enterprise"
    ## The platform to be deployed specified by the user.  Possible values are: OCP and ROKS.  This is normally populated by the User script
    ## based on input from the user.
    sc_deployment_platform: "ROKS"
    ## For OCP, this is used to create route, you should input a valid hostname in the required field.
    sc_deployment_hostname_suffix: "{{ meta.namespace }}.mycluster-fncm-a8e7ac3bb1f0d5318e81c3533b970b16-0000.us-east.containers.appdomain.cloud"
    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false
    ## For ROKS Ingress, provide TLS secret name for Ingress controller.
    sc_ingress_tls_secret_name: <Required>
    ## If the root certificate authority (CA) key of the external service is not signed by the operator root CA key, provide the TLS certificate of
    ## the external service to the component's truststore.
    trusted_certificate_list: []
    ## On OCP 3.x and 4.x, the User script will populate these three (3) parameters based on your input for "enterprise" deployment.
    ## If you manually deploying without using the User script, then you would provide the different storage classes for the slow, medium
    ## and fast storage parameters below.  If you only have 1 storage class defined, then you can use that 1 storage class for all 3 parameters.
    storage_configuration:
      sc_slow_file_storage_classname: managed-nfs-storage
      sc_medium_file_storage_classname: managed-nfs-storage
      sc_fast_file_storage_classname: managed-nfs-storage
    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that corresponds to a user ID.
    sc_run_as_user:
    ## Enable/disable ECM (FNCM) / BAN initialization (e.g., creation of P8 domain, creation/configuration of object stores,
    ## creation/configuration of CSS servers, and initialization of Navigator (ICN)).  If the "initialize_configuration" section
    ## is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously initialized.
    sc_content_initialization: false
    ## OR
    ## If you want to enable the initialize for a specific product for ECM (FNCM) / BAN, you will need to use
    ## these fields instead.  Otherwise, use the default sc_content_initialization: false
    # sc_content_initialization:
    #  cpe: false
    #  css: false
    #  ban: false

    ## Enable/disable the ECM (FNCM) / BAN verification (e.g., creation of test folder, creation of test document,
    ## execution of CBR search, and creation of Navigator demo repository and desktop).  If the "verify_configuration"
    ## section is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously verified.
    sc_content_verification: false
    ## OR
    ## If you want to enable the verification for a specific product for ECM (FNCM) / BAN, you will need to use
    ## these fields instead.  Otherwise, use the default sc_content_verification: false
    # sc_content_verification:
    #  cpe: false
    #  css: false
    #  ban: false

    sc_cpe_limited_storage: false
    image_pull_secrets:
    - admin.registrykey
  ## The beginning section of LDAP configuration for CP4A
  ldap_configuration:
    ## The possible values are: "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "IBM Security Directory Server"
    ## The name of the LDAP server to connect
    lc_ldap_server: "10.241.xxx.xxx"
    ## The port of the LDAP server to connect.  Some possible values are: 389, 636, etc.
    lc_ldap_port: "389"
    ## The LDAP bind secret for LDAP authentication.  The secret is expected to have ldapUsername and ldapPassword keys.  Refer to Knowledge Center for more info.
    lc_bind_secret: ldap-bind-secret
    ## The LDAP base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_base_dn: "o=ibm,c=us"
    ## Enable SSL/TLS for LDAP communication. Refer to Knowledge Center for more info.
    lc_ldap_ssl_enabled: false
    ## The name of the secret that contains the LDAP SSL/TLS certificate.
    lc_ldap_ssl_secret_name: "<Required>"
    ## The LDAP user name attribute.  One possible value is "*:cn" for TDS and "user:sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_name_attribute: "*:cn"
    ## The LDAP user display name attribute. One possible value is "cn" for TDS and "sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_display_name_attr: "cn"
    ## The LDAP group base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_group_base_dn: "ou=Groups,O=IBM,C=US"
    ## The LDAP group name attribute.  One possible value is "*:cn" for TDS and "*:cn" for AD. Refer to Knowledge Center for more info.
    lc_ldap_group_name_attribute: "*:cn"
    ## The LDAP group display name attribute.  One possible value for both TDS and AD is "cn". Refer to Knowledge Center for more info.
    lc_ldap_group_display_name_attr: "cn"
    ## The LDAP group membership search filter string.  One possible value is "(&(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))" for TDS
    ## and "(&(cn=%v)(objectcategory=group))" for AD.
    lc_ldap_group_membership_search_filter: "(&(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))"
    ## The LDAP group membership ID map.  One possible value is "groupofnames:member" for TDS and "memberOf:member" for AD.
    lc_ldap_group_member_id_map: "memberOf:member"
    ## The User script will uncomment the section needed based on user's input from User script.  If you are deploying without the User script,
    ## uncomment the necessary section (depending if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    # ad:
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(samAccountName=%v)(objectClass=user))"
    #   lc_group_filter: "(&(samAccountName=%v)(objectclass=group))"
    tds:
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))"
      ## User script should only uncomment this section if External Share if selected as an optional component.
      ## If you are deploying without the User script, uncomment the necessary section (depending
      ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
      # ext_ldap_configuration:
      #   lc_selected_ldap_type: "IBM Security Directory Server"
      #   lc_ldap_server: "<Required>"
      #   lc_ldap_port: "<Required>"
      #   lc_bind_secret: ldap-bind-secret
      #   lc_ldap_base_dn: "<Required>"
      #   lc_ldap_ssl_enabled: true
      #   lc_ldap_ssl_secret_name: "<Required>"
      #   lc_ldap_user_name_attribute: "<Required>"
      #   lc_ldap_user_display_name_attr: "<Required>"
      #   lc_ldap_group_base_dn: "<Required>"
      #   lc_ldap_group_name_attribute: "<Required>"
      #   lc_ldap_group_display_name_attr: "cn"
      #   lc_ldap_group_membership_search_filter: "<Required>"
      #   lc_ldap_group_member_id_map: "<Required>"
    ## User script will uncomment the section needed based on user's input from User script.
    ## If you are deploying without the User script, uncomment the necessary section (depending
    ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    # ad:
    ## This is the Global Catalog port for the LDAP
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(samAccountName=%v)(objectClass=user))"
    #   lc_group_filter: "(&(samAccountName=%v)(objectclass=group))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
  ## The beginning section of database configuration for CP4A

  #ecm_configuration:
    #cpe:
      #replica_count: 1
    #graphql:
      #replica_count: 1
    

  datasource_configuration:
    ## The dc_ssl_enabled parameter is used to support database connection over SSL for DB2/Oracle.
    dc_ssl_enabled: false
    ## The database_precheck parameter is used to enable or disable CPE/Navigator database connection check.
    ## If set to "true", then CPE/Navigator database connection check will be enabled.
    ## if set to "false", then CPE/Navigator database connection check will not be enabled.

    ## The database configuration for ICN (Navigator) - aka BAN (Business Automation Navigator)
    dc_icn_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".  This should be the same as the
      ## GCD and object store configuration above.
      dc_database_type: "db2"
      ## Provide the ICN datasource name.  The default value is "ECMClientDS".
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "10.241.xxx.xxx"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "50000"
      ## Provide the name of the database for ICN (Navigator).  For example: "ICNDB"
      database_name: "ICNDB"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_icn_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    # database_precheck: true
    ## The database configuration for the GCD datasource for CPE
    dc_gcd_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".
      dc_database_type: "db2"
      ## The GCD non-XA datasource name.  The default value is "FNGCDDS".
      dc_common_gcd_datasource_name: "FNGCDDS"
      ## The GCD XA datasource name. The default value is "FNGCDDSXA".
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      ## Provide the database server name or IP address of the database server.
      database_servername: "10.241.xxx.xxx"
      ## Provide the name of the database for the GCD for CPE.  For example: "GCDDB"
      database_name: "GCDDB"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "50000"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_gcd_jdbc_url: "<Required>"
      ## If the database type is Db2 HADR, then complete the rest of the parameters below.
      ## Provide the database server name or IP address of the standby database server.
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    ## The database configuration for the object store 1 (OS1) datasource for CPE
    dc_os_datasources:
    - dc_database_type: "db2" ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".  This should be the same as the
      ## Provide the object store label for the object store.  The default value is "os" or not defined.
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "abc", then your OS secret must be defined as:
      ## --from-literal=abcDBUsername="<your os db username>" --from-literal=abcDBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If you have multiple object stores, then you need to define multiple datasource sections starting
      ## at "dc_database_type" element.
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "os"
      ## The OS1 non-XA datasource name.  The default value is "FNOS1DS".
      dc_common_os_datasource_name: "FNOS1DS"
      ## The OS1 XA datasource name.  The default value is "FNOS1DSXA".
      dc_common_os_xa_datasource_name: "FNOS1DSXA"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "10.241.xxx.xxx"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "OS1DB"
      database_name: "OSDB"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "50000"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
